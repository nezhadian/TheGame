@page "/army"
@inject IUserUnitService UserUnitService;
@inject IShopService ShopService;
@attribute [Authorize];

<style>
    .unit-health-value {
        position: absolute;
        top: 0;
        width: 100%;
        opacity: 0.3;
    }
    .unit-health-x {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }
</style>

<button class="btn btn-warning py-3" @onclick="ReviveAll">Revive All Units 1000$</button>

@foreach (Unit unit in UserUnitService.Units)
{

    <div class="d-flex flex-row align-items-center mt-4">

        <h5 class="m-0" style="min-width:12rem">@unit.Title's</h5>

        <button class="btn btn-success ml-3" @onclick="() => BuyNewItem(unit.Id)">
            Buy @unit.Cost
            <span class="oi oi-dollar"></span>
        </button>

    </div>
    <div class="d-flex flex-nowrap overflow-auto">

        @foreach (var item in UserUnitService.UserUnits.Where(u => u.UnitId == unit.Id).OrderByDescending(u=> u.HitPoint))
        {
            <div class="card my-3 ml-2" style="width:12rem;flex:0 0 auto">
                <!-- Card Image-->
                <div class="card-img-top position-relative">
                    @if (item.HitPoint == 0)
                    {
                        <img class="w-100 float-left" src="images/@(unit.Title + ".jpeg")" />
                        <span class="unit-health-x oi oi-x text-danger h1"></span>
                        <div class="bg-danger h-100 unit-health-value"></div>


                    }
                    else if (item.HitPoint == unit.HitPoint)
                    {
                        <img class="w-100 float-left" src="images/@(unit.Title + ".jpeg")" />
                    }
                    else
                    {
                        <img class="w-100 float-left" src="images/@(unit.Title + ".jpeg")" />
                        <div class="bg-danger unit-health-value" style="@GetHeightFromHitPoint(item.HitPoint,unit.HitPoint)"></div>
                    }

                </div>

                <div class="p-3">

                    <!-- Unit Details-->
                    <h4 class="card-title">
                        @unit.Title
                    </h4>

                    <div>

                        <span class="card-text d-flex w-100 justify-content-between">
                            <span>
                                <span class="oi oi-fire"></span>
                                Attack
                            </span>

                            <span class="font-weight-bold">@unit.Attack</span>
                        </span>

                        <span class="card-text d-flex w-100 justify-content-between">
                            <span>
                                <span class="oi oi-shield"></span>
                                Defence
                            </span>

                            <span class="font-weight-bold">@unit.Defence</span>
                        </span>

                        <span class="card-text d-flex w-100 justify-content-between">
                            <span>
                                <span class="oi oi-target"></span>
                                Hit Points
                            </span>
                            <span class="font-weight-bold">@unit.HitPoint</span>
                        </span>

                        <span class="card-text d-flex w-100 justify-content-between">
                            <span class="text-danger">
                                <span class="oi oi-heart"></span>
                                Health
                            </span>
                            <span class="font-weight-bold">@item.HitPoint/@unit.HitPoint</span>
                        </span>
                    </div>

                </div>



            </div>
        }
    </div>
}



@code {
    protected override async Task OnInitializedAsync()
    {
        await UserUnitService.GetUnitsAsync();
        await UserUnitService.GetUserUnitsAsync();
    }

    public string GetHeightFromHitPoint(int hitpoint, int unitHitpoint)
    {
        return $"height:{100 - ((double)hitpoint / unitHitpoint) * 100}%";
    }

    public async Task BuyNewItem(int unitId)
    {
        await ShopService.BuyNewItemAsync(unitId);
    }

    public async Task ReviveAll()
    {
        await UserUnitService.ReviveAllUnitsAsync();
        await ShopService.GetCostsAsync();

    }
}
